// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`toXMLObj > JUnitObj{ testsuites: [ …(1) ] } inkremental -> Obj 1`] = `
{
  "testsuites": {
    "$": {
      "failures": 1,
      "tests": 2,
    },
    "testsuite": [
      {
        "$": {
          "assertions": 2,
          "errors": 0,
          "failures": 1,
          "file": "./",
          "name": "name",
          "skipped": 0,
          "tests": 2,
          "time": 0,
          "timestamp": "2024-04-22T17:33:42.238Z",
        },
        "testcase": [
          {
            "$": {
              "assertions": 1,
              "classname": "classname",
              "file": "file",
              "line": 0,
              "name": "name",
              "time": 0,
            },
            "failure": {
              "$": {
                "message": "error_message",
                "type": "error_type",
              },
              "_": "error_context",
            },
          },
          {
            "$": {
              "assertions": 1,
              "classname": "classname",
              "file": "file",
              "line": 0,
              "name": "name",
              "time": 0,
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`toXMLObj > JUnitObj{ testsuites: [ …(1) ] } inkremental -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites failures="1" tests="2">
  <testsuite name="name" tests="2" failures="1" errors="0" skipped="0" assertions="2" time="0" file="./" timestamp="2024-04-22T17:33:42.239Z">
    <testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0">
      <failure message="error_message" type="error_type">error_context</failure>
    </testcase>
    <testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0"/>
  </testsuite>
</testsuites>"
`;

exports[`toXMLObj > JUnitObj{ testsuites: [] } minimal -> Obj 1`] = `
{
  "testsuites": {
    "$": {
      "failures": 0,
      "tests": 0,
    },
    "testsuite": [],
  },
}
`;

exports[`toXMLObj > JUnitObj{ testsuites: [] } minimal -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites failures="0" tests="0"/>"
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } inkremental -> Obj 1`] = `
{
  "testcase": {
    "$": {
      "assertions": 1,
      "classname": "classname",
      "file": "file",
      "line": 0,
      "name": "name",
      "time": 0,
    },
    "failure": {
      "$": {
        "message": "error_message",
        "type": "error_type",
      },
      "_": "error_context",
    },
  },
}
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } inkremental -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0">
  <failure message="error_message" type="error_type">error_context</failure>
</testcase>"
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } inkremental -> Obj 3`] = `
{
  "testcase": {
    "$": {
      "assertions": 1,
      "classname": "classname",
      "file": "file",
      "line": 0,
      "name": "name",
      "time": 0,
    },
  },
}
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } inkremental -> Obj 4`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0"/>"
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } minimal -> Obj 1`] = `
{
  "testcase": {
    "$": {
      "assertions": 1,
      "classname": "classname",
      "file": "file",
      "line": 0,
      "name": "name",
      "time": 0,
    },
    "failure": {
      "$": {
        "message": "error_message",
        "type": "error_type",
      },
      "_": "error_context",
    },
  },
}
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } minimal -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0">
  <failure message="error_message" type="error_type">error_context</failure>
</testcase>"
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } minimal -> Obj 3`] = `
{
  "testcase": {
    "$": {
      "assertions": 1,
      "classname": "classname",
      "file": "file",
      "line": 0,
      "name": "name",
      "time": 0,
    },
  },
}
`;

exports[`toXMLObj > JUnitTestCase{ name: 'name', …(6) } minimal -> Obj 4`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0"/>"
`;

exports[`toXMLObj > JUnitTestSuite{ name: 'name', …(1) } inkremental -> Obj 1`] = `
{
  "testsuite": {
    "$": {
      "assertions": 2,
      "errors": 0,
      "failures": 1,
      "file": "./",
      "name": "name",
      "skipped": 0,
      "tests": 2,
      "time": 0,
      "timestamp": "2024-04-22T17:33:42.240Z",
    },
    "testcase": [
      {
        "$": {
          "assertions": 1,
          "classname": "classname",
          "file": "file",
          "line": 0,
          "name": "name",
          "time": 0,
        },
        "failure": {
          "$": {
            "message": "error_message",
            "type": "error_type",
          },
          "_": "error_context",
        },
      },
      {
        "$": {
          "assertions": 1,
          "classname": "classname",
          "file": "file",
          "line": 0,
          "name": "name",
          "time": 0,
        },
      },
    ],
  },
}
`;

exports[`toXMLObj > JUnitTestSuite{ name: 'name', …(1) } inkremental -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuite name="name" tests="2" failures="1" errors="0" skipped="0" assertions="2" time="0" file="./" timestamp="2024-04-22T17:33:42.242Z">
  <testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0">
    <failure message="error_message" type="error_type">error_context</failure>
  </testcase>
  <testcase name="name" classname="classname" file="file" line="0" assertions="1" time="0"/>
</testsuite>"
`;

exports[`toXMLObj > JUnitTestSuite{ name: 'name', …(1) } minimal -> Obj 1`] = `
{
  "testsuite": {
    "$": {
      "assertions": 0,
      "errors": 0,
      "failures": 0,
      "file": "./",
      "name": "name",
      "skipped": 0,
      "tests": 0,
      "time": 0,
      "timestamp": "2024-04-22T17:33:42.233Z",
    },
    "testcase": [],
  },
}
`;

exports[`toXMLObj > JUnitTestSuite{ name: 'name', …(1) } minimal -> Obj 2`] = `
"<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuite name="name" tests="0" failures="0" errors="0" skipped="0" assertions="0" time="0" file="./" timestamp="2024-04-22T17:33:42.235Z"/>"
`;
